- [Voiceover] In this exercise, we will look at creating and calling functions. The sample code for this exercise is located in the class repository on Github in the JavaScript folder in a sub-folder called five functions. In this exercise we are going to look at simple method dot j s. For the first example, let's say we wanna have a function that puts up a message that says "hi" So I'm gonna type function space say hi open parentheses, closed parentheses, open curly brace, press enter. Type alert to get error pop-up. Open parentheses, double quote, hi. Exclamation, double quote close parentheses, semi-colon. Then to end our function, closing curly brace. Press enter. We now have created a function that will open a message box or an alert box that says hi. Let's test this function out. To call the function all we need is it's name. So say hi, open parentheses, close parentheses, press enter. You should see a message box that says hi. Go ahead and press okay. Now suppose we want to say hi to people. Let's suppose for this example that we want to tell each of them hi. We can do this by creating another function. I'm gonna type at the command prompt, function, space, and we're gonna call this function "say hi to" Open parentheses, now we want to say hi to different people who have different names, but we want to say hi, like "Hi Dave," or "Hi Eric" We're gonna be consistent with hi, so I'm gonna say, we just need to change their name each time I say hi. And I'm gonna close that with a closing parentheses. Then let's open our function with a open curly brace and press enter. In the next line we're gonna type alert, open parentheses, double quote, hi space, double quote, plus, name, plus, double quote, exclamation, double quote, closing parentheses, semi-colon, press enter. Finally we can close our function with a closing curly brace Then we'll press enter again. So now we have a function called "say hi to" where we can give it somebody's name, and it should give us a message box that says "Hi" plus their name. To call this function, to call this function we'll type, "say hi to" open parentheses, double quote, let's say hi to Dave. Dave was the guy who created a lot of the HTML and CSS lessons. So I'm gonna type "say hi to" Open parentheses, double quote, Dave, close double quote, close parentheses, press enter. When I call say hi to, and passing Dave, I get a message box that says, "Hi Dave" I'm gonna go ahead and tell it okay to close the message box Now let's say we wanna say hi to somebody named Eric. What would that look like? Well we could do "say hi to" Then we'll put open parentheses, double quote, Eric, double quote, close parentheses, press enter. Notice you have an alert box that says, "Hi Eric" You wanna click "okay" So by saying hi to Dave and saying hi to Eric, you should be able to notice that I'm passing in a different value to our say hi to function. And then the "say hi to function" uses that value to create the message of hi plus the name. Again, we don't have to say function say hi to plus our name in there. We don't need to specify bar, JavaScript takes care of that for us. Now we're passing strings to it. What if we pass something that isn't a string? Let's try with a number. So I'm gonna say "say hi to" let's use pi. So open parentheses, three point one four one five. Close parentheses, enter. It says "hi three point one four one five" So it's treated that as a string. What about a boolean? If we wanted to say hi to true, let's say hi to true. So I have say hi to, open parentheses, true, close parentheses, and I'm gonna press enter. And it says "Hi true" So we can pass in booleans, and JavaScript will treat that as a string. Now something you're going to see in JavaScript, and later on hopefully in c sharp and Java, is a thing called null. And null can be a little confusing, cause it can cause a lot of trouble. Let's see what happens if we want to say hi to null. So I wanna say "say hi to null" So I have say hi to, open parentheses, null, close parentheses. It says, "Hi null" So null is also treated as a string. Let's take this one step further. I'm gonna create a variable. I'm gonna call it "undefined variable" And I'm gonna put a semi-colon in there to remind it hey I'm at the end of this. But now I have a variable called undefined variable. But if we wanna say hi to undefined variable, I'm gonna close my parentheses and press enter. But it says "Hi undefined" What's going on there? Once again, JavaScript is treating it as a string. I'm gonna go ahead and tell it okay. So in this exercise, we have created two functions. One that does not take a parameter, and another that does take a parameter. With "say hi to," we tested passing in various arguments. We tested passing in strings, numbers, booleans, nulls, and even undefined's. As we noticed, JavaScript treated everything as a string in this case. At this point you should be able to create your own function passing an argument to that function, and have it do something with that argument. Go ahead and try that now.